//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Fantasy.API.DataAccess.Models.MSSQL.Fantasy
{
    public class Notification
    {
        #region Primitive Properties
    
        public int NotificationId
        {
            get; set;
        }
    
        public string Name
        {
            get; set;
        }
    
        public string Content
        {
            get; set;
        }
    
        public string AccountLogin
        {
    get { return _accountLogin; }
            set
            {
                if (_accountLogin != value)
                {
                    if (Account != null && Account.Login != value)
                    {
                        Account = null;
                    }
                    _accountLogin = value;
                }
            }
        }
        private string _accountLogin;
    
        public string Link
        {
            get; set;
        }
    
        public bool Active
        {
            get; set;
        }

        #endregion

        #region Navigation Properties
    
        public Account Account
        {
            get { return _account; }
            set
            {
                if (!ReferenceEquals(_account, value))
                {
                    var previousValue = _account;
                    _account = value;
                    FixupAccount(previousValue);
                }
            }
        }
        private Account _account;

        #endregion

        #region Association Fixup
    
        private void FixupAccount(Account previousValue)
        {
            if (previousValue != null && previousValue.Notifications.Contains(this))
            {
                previousValue.Notifications.Remove(this);
            }
    
            if (Account != null)
            {
                if (!Account.Notifications.Contains(this))
                {
                    Account.Notifications.Add(this);
                }
                if (AccountLogin != Account.Login)
                {
                    AccountLogin = Account.Login;
                }
            }
        }

        #endregion

    }
}
