//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Fantasy.API.DataAccess.Models.MSSQL.Fantasy
{
    public class ContestLineup
    {
        #region Primitive Properties
    
        public int ContestLineupId
        {
            get; set;
        }
    
        public long ContestId
        {
    get { return _contestId; }
            set
            {
                if (_contestId != value)
                {
                    if (Contest != null && Contest.ContestId != value)
                    {
                        Contest = null;
                    }
                    _contestId = value;
                }
            }
        }
        private long _contestId;
    
        public long LineUpId
        {
    get { return _lineUpId; }
            set
            {
                if (_lineUpId != value)
                {
                    if (LineUp != null && LineUp.LineUpId != value)
                    {
                        LineUp = null;
                    }
                    _lineUpId = value;
                }
            }
        }
        private long _lineUpId;

        #endregion

        #region Navigation Properties
    
        public Contest Contest
        {
            get { return _contest; }
            set
            {
                if (!ReferenceEquals(_contest, value))
                {
                    var previousValue = _contest;
                    _contest = value;
                    FixupContest(previousValue);
                }
            }
        }
        private Contest _contest;
    
        public LineUp LineUp
        {
            get { return _lineUp; }
            set
            {
                if (!ReferenceEquals(_lineUp, value))
                {
                    var previousValue = _lineUp;
                    _lineUp = value;
                    FixupLineUp(previousValue);
                }
            }
        }
        private LineUp _lineUp;

        #endregion

        #region Association Fixup
    
        private void FixupContest(Contest previousValue)
        {
            if (previousValue != null && previousValue.ContestLineups.Contains(this))
            {
                previousValue.ContestLineups.Remove(this);
            }
    
            if (Contest != null)
            {
                if (!Contest.ContestLineups.Contains(this))
                {
                    Contest.ContestLineups.Add(this);
                }
                if (ContestId != Contest.ContestId)
                {
                    ContestId = Contest.ContestId;
                }
            }
        }
    
        private void FixupLineUp(LineUp previousValue)
        {
            if (previousValue != null && previousValue.ContestLineups.Contains(this))
            {
                previousValue.ContestLineups.Remove(this);
            }
    
            if (LineUp != null)
            {
                if (!LineUp.ContestLineups.Contains(this))
                {
                    LineUp.ContestLineups.Add(this);
                }
                if (LineUpId != LineUp.LineUpId)
                {
                    LineUpId = LineUp.LineUpId;
                }
            }
        }

        #endregion

    }
}
