//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Fantasy.API.DataAccess.Models.MSSQL.Fantasy
{
    public class ContestGame
    {
        #region Primitive Properties
    
        public long ContestId
        {
    get { return _contestId; }
            set
            {
                if (_contestId != value)
                {
                    if (Contests != null && Contests.ContestId != value)
                    {
                        Contests = null;
                    }
                    _contestId = value;
                }
            }
        }
        private long _contestId;
    
        public long GameId
        {
    get { return _gameId; }
            set
            {
                if (_gameId != value)
                {
                    if (Game != null && Game.GameId != value)
                    {
                        Game = null;
                    }
                    _gameId = value;
                }
            }
        }
        private long _gameId;

        #endregion

        #region Navigation Properties
    
        public Contest Contests
        {
            get { return _contests; }
            set
            {
                if (!ReferenceEquals(_contests, value))
                {
                    var previousValue = _contests;
                    _contests = value;
                    FixupContests(previousValue);
                }
            }
        }
        private Contest _contests;
    
        public Game Game
        {
            get { return _game; }
            set
            {
                if (!ReferenceEquals(_game, value))
                {
                    var previousValue = _game;
                    _game = value;
                    FixupGame(previousValue);
                }
            }
        }
        private Game _game;

        #endregion

        #region Association Fixup
    
        private void FixupContests(Contest previousValue)
        {
            if (previousValue != null && previousValue.ContestGame.Contains(this))
            {
                previousValue.ContestGame.Remove(this);
            }
    
            if (Contests != null)
            {
                if (!Contests.ContestGame.Contains(this))
                {
                    Contests.ContestGame.Add(this);
                }
                if (ContestId != Contests.ContestId)
                {
                    ContestId = Contests.ContestId;
                }
            }
        }
    
        private void FixupGame(Game previousValue)
        {
            if (previousValue != null && previousValue.ContestGames.Contains(this))
            {
                previousValue.ContestGames.Remove(this);
            }
    
            if (Game != null)
            {
                if (!Game.ContestGames.Contains(this))
                {
                    Game.ContestGames.Add(this);
                }
                if (GameId != Game.GameId)
                {
                    GameId = Game.GameId;
                }
            }
        }

        #endregion

    }
}
