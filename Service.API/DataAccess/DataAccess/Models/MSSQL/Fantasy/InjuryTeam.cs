//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Fantasy.API.DataAccess.Models.MSSQL.Fantasy
{
    public class InjuryTeam
    {
        #region Primitive Properties
    
        public string TeamId
        {
            get; set;
        }
    
        public string Name
        {
            get; set;
        }
    
        public string Abbr
        {
            get; set;
        }
    
        public string Market
        {
            get; set;
        }
    
        public string LeagueId
        {
    get { return _leagueId; }
            set
            {
                if (_leagueId != value)
                {
                    if (League != null && League.LeagueId != value)
                    {
                        League = null;
                    }
                    _leagueId = value;
                }
            }
        }
        private string _leagueId;

        #endregion

        #region Navigation Properties
    
        public ICollection<InjuryPlayer> InjuryPlayers
        {
            get
            {
                if (_injuryPlayers == null)
                {
                    var newCollection = new FixupCollection<InjuryPlayer>();
                    newCollection.CollectionChanged += FixupInjuryPlayers;
                    _injuryPlayers = newCollection;
                }
                return _injuryPlayers;
            }
            set
            {
                if (!ReferenceEquals(_injuryPlayers, value))
                {
                    var previousValue = _injuryPlayers as FixupCollection<InjuryPlayer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInjuryPlayers;
                    }
                    _injuryPlayers = value;
                    var newValue = value as FixupCollection<InjuryPlayer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInjuryPlayers;
                    }
                }
            }
        }
        private ICollection<InjuryPlayer> _injuryPlayers;
    
        public League League
        {
            get { return _league; }
            set
            {
                if (!ReferenceEquals(_league, value))
                {
                    var previousValue = _league;
                    _league = value;
                    FixupLeague(previousValue);
                }
            }
        }
        private League _league;

        #endregion

        #region Association Fixup
    
        private void FixupLeague(League previousValue)
        {
            if (previousValue != null && previousValue.InjuryTeams.Contains(this))
            {
                previousValue.InjuryTeams.Remove(this);
            }
    
            if (League != null)
            {
                if (!League.InjuryTeams.Contains(this))
                {
                    League.InjuryTeams.Add(this);
                }
                if (LeagueId != League.LeagueId)
                {
                    LeagueId = League.LeagueId;
                }
            }
        }
    
        private void FixupInjuryPlayers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InjuryPlayer item in e.NewItems)
                {
                    item.InjuryTeam = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InjuryPlayer item in e.OldItems)
                {
                    if (ReferenceEquals(item.InjuryTeam, this))
                    {
                        item.InjuryTeam = null;
                    }
                }
            }
        }

        #endregion

    }
}
