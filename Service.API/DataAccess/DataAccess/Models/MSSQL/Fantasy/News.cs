//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Fantasy.API.DataAccess.Models.MSSQL.Fantasy
{
    public class News
    {
        #region Primitive Properties
    
        public long NewsId
        {
            get; set;
        }
    
        public string Tittle
        {
            get; set;
        }
    
        public string Content
        {
            get; set;
        }
    
        public System.DateTime Date
        {
            get; set;
        }

        #endregion

        #region Navigation Properties
    
        public ICollection<NewsPlayer> NewsPlayers
        {
            get
            {
                if (_newsPlayers == null)
                {
                    var newCollection = new FixupCollection<NewsPlayer>();
                    newCollection.CollectionChanged += FixupNewsPlayers;
                    _newsPlayers = newCollection;
                }
                return _newsPlayers;
            }
            set
            {
                if (!ReferenceEquals(_newsPlayers, value))
                {
                    var previousValue = _newsPlayers as FixupCollection<NewsPlayer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupNewsPlayers;
                    }
                    _newsPlayers = value;
                    var newValue = value as FixupCollection<NewsPlayer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupNewsPlayers;
                    }
                }
            }
        }
        private ICollection<NewsPlayer> _newsPlayers;
    
        public ICollection<NewsTeam> NewsTeams
        {
            get
            {
                if (_newsTeams == null)
                {
                    var newCollection = new FixupCollection<NewsTeam>();
                    newCollection.CollectionChanged += FixupNewsTeams;
                    _newsTeams = newCollection;
                }
                return _newsTeams;
            }
            set
            {
                if (!ReferenceEquals(_newsTeams, value))
                {
                    var previousValue = _newsTeams as FixupCollection<NewsTeam>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupNewsTeams;
                    }
                    _newsTeams = value;
                    var newValue = value as FixupCollection<NewsTeam>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupNewsTeams;
                    }
                }
            }
        }
        private ICollection<NewsTeam> _newsTeams;

        #endregion

        #region Association Fixup
    
        private void FixupNewsPlayers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (NewsPlayer item in e.NewItems)
                {
                    item.News = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NewsPlayer item in e.OldItems)
                {
                    if (ReferenceEquals(item.News, this))
                    {
                        item.News = null;
                    }
                }
            }
        }
    
        private void FixupNewsTeams(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (NewsTeam item in e.NewItems)
                {
                    item.News = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (NewsTeam item in e.OldItems)
                {
                    if (ReferenceEquals(item.News, this))
                    {
                        item.News = null;
                    }
                }
            }
        }

        #endregion

    }
}
