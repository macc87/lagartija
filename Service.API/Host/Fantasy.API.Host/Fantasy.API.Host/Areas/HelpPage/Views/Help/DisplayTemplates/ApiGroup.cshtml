@using System.Reflection
@using System.Web.Http
@using System.Web.Http.Controllers
@using System.Web.Http.Description
@using  Fantasy.API.Host.Areas.HelpPage
@using  Fantasy.API.Host.Areas.HelpPage.Models
@model IGrouping<HttpControllerDescriptor, ApiDescription>

@{
    
    var value = "No documentation available.";
    var controllerDocumentation = ViewBag.DocumentationProvider != null ? 
        ViewBag.DocumentationProvider.GetDocumentation(Model.Key) : 
        null;
}

<h2 id="@Model.Key.ControllerName">@Model.Key.ControllerName</h2>
@if (!String.IsNullOrEmpty(controllerDocumentation))
{
    <p>@controllerDocumentation</p>
}
<table class="help-page-table">
    <thead>
    <tr>
        <th style="width: 25%">API</th>
        <th style="width: 50%">Description</th>
        <th style="width: 25%">Used By Roles</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var api in Model)
    {
        <tr>
            <td class="api-name"><a href="@Url.Action("Api", "Help", new { apiId = api.GetFriendlyId() })">@api.HttpMethod.Method @api.RelativePath</a></td>
            <td class="api-documentation">
                @if (api.Documentation != null)
                {
                    <p>@api.Documentation</p>
                }
                else
                {
                    <p>No documentation available.</p>
                }
            </td>
            <td class="api-documentation">
                @{
                  var member = (MemberInfo)((ReflectedHttpActionDescriptor)api.ActionDescriptor).MethodInfo;
                  var attributes = member.CustomAttributes;
                  var AuthorizeAttributes = attributes.FirstOrDefault(x => x.AttributeType.ToString() == "System.Web.Http.AuthorizeAttribute");
                  if (AuthorizeAttributes != null)
                  {
                      if (AuthorizeAttributes.NamedArguments != null)
                      {
                          var roles = AuthorizeAttributes.NamedArguments.FirstOrDefault(x => x.MemberName == "Roles");
                          if (roles!=null && roles.TypedValue!=null && roles.TypedValue.Value!=null)
                          {
                              value = roles.TypedValue.Value.ToString();
                          }

                         
                      }


                  }
                }
                <p>@value</p>
            </td>
        </tr>
    }
    </tbody>
</table>